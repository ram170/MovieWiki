{"version":3,"sources":["components/banner/Banner.js","components/details/Details.js","components/Result/Result.js","App.js","index.js"],"names":["Banner","state","checked","toggleChecked","setState","document","body","style","backgroundColor","color","props","changeCss","className","src","this","Switch","size","onClick","label","Component","Details","ratings","imdb","details","Ratings","Value","rotten","cssVal","Poster","Title","Genre","Plot","Director","Actors","Released","Rated","Type","Runtime","Result","myfun","movies","map","value","index","posters","imageClick","bind","App","title","doneLoading","error","shadowCss","options","selected","onChange","e","target","name","onSubmit","preventDefault","check","titleString","constructString","axios","get","then","res","data","Response","i","Search","length","movie","restructureData","poster","param","stringArr","split","finalString","undefined","isNaN","toUpperCase","slice","imgClick","console","log","Spinner","animation","type","placeholder","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dea75440.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Banner.css';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\r\n\r\nexport class Banner extends Component {\r\n    state = {\r\n        checked: false\r\n    }\r\n\r\n    toggleChecked = () => {\r\n        debugger\r\n        this.setState({checked: !this.state.checked});\r\n        document.body.style.backgroundColor = this.state.checked? 'white':'black';\r\n        document.body.style.color = this.state.checked? 'black':'white';\r\n        debugger\r\n        this.props.changeCss(!this.state.checked);\r\n        debugger\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div className = \"topnav grid-container-main\">\r\n                <div></div>\r\n                <div className = \"mainText\">\r\n                    <h1><img src = \"https://i.pinimg.com/originals/9e/d8/61/9ed86194c90b60ad5ce0e14fdb1b97d5.png\" className = {!this.state.checked? \"img\" : \"invertImg\"}></img>MovieWiki</h1>\r\n                </div>\r\n                <div> </div>\r\n            </div>\r\n            <div>\r\n                <span className = \"switch\">\r\n                <WbSunnyIcon />\r\n                <Switch size=\"small\" checked={this.state.checked} onClick={this.toggleChecked} label=\"Secondary\"/>\r\n                <NightsStayIcon />\r\n                </span>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Banner\r\n","import React, { Component } from 'react';\r\nimport './Details.css';\r\n// import GradeIcon from '@material-ui/icons/Grade';\r\n\r\nexport class Details extends Component {\r\n    ratings = () => {\r\n        this.imdb = this.props.details.Ratings[0]? this.props.details.Ratings[0].Value: '-';\r\n        this.rotten = this.props.details.Ratings[1]? this.props.details.Ratings[1].Value: '-';\r\n    }\r\n    render() {\r\n        this.ratings();\r\n        return (\r\n            <div>\r\n                {/* <br></br> */}\r\n                <div className = \"container-fluid\">\r\n                    <div className = \"row\">\r\n                        <div className = 'poster col-md-2 '>\r\n                            <img className = {this.props.cssVal === ''? \"posterImage\": this.props.cssVal} src = {this.props.details.Poster}/>\r\n                            <div><br></br></div>\r\n                        </div>\r\n                        <div className = 'content col-md-8'>\r\n                            <span className = {this.props.cssVal === ''? \"title\": \"editedTitle\"}> {this.props.details.Title } </span>\r\n                            {/* <span className = 'headings a'> IMDB </span> {this.props.details.Ratings[0].Value} */}\r\n                            <br></br> <br></br>\r\n                            <div className = \"movie-details\">\r\n                                <span className = 'headings'>Genre: </span> {this.props.details.Genre} <br></br>\r\n                                <span className = 'headings'>Plot: </span> {this.props.details.Plot} <br></br>\r\n                                <span className = 'headings'>Director: </span> {this.props.details.Director} <br></br>\r\n                                <span className = 'headings'>Actors: </span> {this.props.details.Actors} <br></br>\r\n                                <span className = 'headings'>Release date: </span> {this.props.details.Released} <br></br>\r\n                                <span className = 'headings'>Rated: </span> {this.props.details.Rated} <br></br>\r\n                                <span className = 'headings'>Type: </span> {this.props.details.Type} <br></br>\r\n                                <span className = 'headings'>Runtime: </span> {this.props.details.Runtime} <br></br>\r\n                            </div>\r\n                            <br></br>\r\n                        </div>\r\n                        <div className = 'col-md-2'>\r\n                            {/* <GradeIcon fontSize = \"large\" className = 'rating'/> */}\r\n                            <span className ={this.props.cssVal === ''? \"title\": \"editedTitle\"}> Rating </span>\r\n                            <br></br> <br></br>\r\n                            <div className = \"movie-ratings\">\r\n                                <span className = 'headings'>IMDB: </span> {this.imdb} <br></br>\r\n                                <span className = 'headings'>Rotten Tomatoes: </span> {this.rotten} <br></br>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Details\r\n","import React, { Component } from 'react'\r\nimport './Result.css';\r\n\r\nexport class Result extends Component {\r\n\r\n    myfun = () => {\r\n        debugger\r\n    }\r\n    render() {\r\n        return this.props.movies.map((value, index) => \r\n                <div className = \"grid-element-search\">\r\n                    { this.props.posters[index] !== 'N/A'?<img src = {this.props.posters[index]} className = \"imgsa\" onClick = { this.props.imageClick.bind(this, value) }></img> : null}\r\n                    <br></br>\r\n                    <br></br>\r\n                    <span className = 'titleSearch'>{ this.props.posters[index] !== 'N/A'? value : null }</span>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Result\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Banner from './components/banner/Banner';\nimport Details from './components/details/Details';\nimport Result from './components/Result/Result';\nimport { Spinner } from 'react-bootstrap';\n\nexport class App extends Component {\n  state = {\n    title: '',\n    doneLoading: true,\n    error: '',\n    details: '',\n    shadowCss: '',\n    options: [],\n    selected: false\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.setState({ doneLoading: false });\n    let checkval = this.check();\n    if(checkval) {\n      this.setState( { error: 'Enter a valid movie name' });\n      this.setState( { title: '' })\n      this.setState({ doneLoading: true });\n       return \n    };\n    this.setState( { error: '' })\n    let titleString = this.constructString();\n    axios.get('https://www.omdbapi.com/?apikey=3fbc69f5&s=' + titleString)  // + '&plot=full' to get full plot\n    .then((res) => {\n      debugger;\n      if (res.data.Response === 'False') {\n        this.setState( { error: 'Enter a valid movie name' });\n        this.setState({ doneLoading: true });\n        return\n      }\n      this.setState({ selected: false });\n      this.setState({ options: [] });\n      for(let i = 0; i < res.data.Search.length; i++) { \n        let movie = this.restructureData(res.data.Search[i]);\n        if (movie.poster !== 'N/A') {\n          this.setState({ options: [...this.state.options, movie]});\n        }\n      }\n      // this.setState({details: res.data});\n      this.setState({ doneLoading: true });\n      debugger\n    })\n    this.setState( { title: '' })\n  }\n\n  check = () => {\n    return this.state.title === '';\n  }\n\n  changeCss = (param) => {\n    if(param) {\n      this.setState( {shadowCss: 'shadow'} );\n    }\n    else {\n      this.setState( {shadowCss: ''} );\n    }\n    debugger\n  }\n\n  constructString = () => {\n    let stringArr = this.state.title.split(' ');\n    let finalString = \"\";\n    for (let i = 0; i < stringArr.length; i++) {\n      debugger\n      if(stringArr[i][0] !== undefined && isNaN(stringArr[i])) {\n        if(i !== stringArr.length-1) {\n          finalString += stringArr[i][0].toUpperCase() + stringArr[i].slice(1) + '+';\n        }\n        else {\n          finalString += stringArr[i][0].toUpperCase() + stringArr[i].slice(1);\n        }\n      }\n      else if(!isNaN(stringArr[i])) {\n        if(i !== stringArr.length-1)\n          finalString += stringArr[i] + '+';\n        else\n          finalString += stringArr[i];\n      }\n    }\n    return finalString;\n  }\n\n  restructureData = (data) => {\n      return {\n        name: data.Title,\n        poster: data.Poster\n      }\n  }\n\n  imgClick = (value) => {\n    this.setState({ details: ''})\n    this.setState({ selected: true });\n    this.setState({ options: [] });\n    debugger\n    let titleString = this.constructString();\n    axios.get('https://www.omdbapi.com/?apikey=3fbc69f5&t=' + value)\n    .then((res) => {\n      console.log(res);\n      this.setState({details: res.data});\n      this.setState({ doneLoading: true });\n      debugger\n    });\n    this.setState( { title: '' })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className = \"topnav\">\n          <Banner changeCss = { this.changeCss }></Banner>\n        </div>\n        <center>{ this.state.doneLoading? null : <Spinner animation=\"grow\" size=\"sm\" />}</center>\n        <div >\n          <center>\n            <span className = \"error\">\n              { this.state.error }\n            </span>\n          </center>\n        </div>\n        {/* <br></br> */}\n        {/* <hr></hr> */}\n        <div className = \"searchForm grid-container-main\">\n          <div></div>\n          <div className = \"grid-element\">\n            <form onSubmit = { this.onSubmit }>\n              <input type = \"text\" placeholder = \"Movie/Series name?\" name = \"title\" value = {this.state.title} onChange = { this.onChange } className = \"textBox\"></input>\n              {' '}\n              <button className = \"btn btn-primary\">Search</button>\n            </form>\n          </div>\n          <div></div>\n        </div>\n        {/* <br></br> */}\n        <hr></hr>\n        {/* <br></br> */}\n        <center>\n        <div className = \"grid-main\">\n        { !this.state.selected? \n          <Result movies = {this.state.options.map(value => {return value.name})} posters = {this.state.options.map(value => {return value.poster})} imageClick = {this.imgClick}></Result> \n        : null }\n        </div>\n        </center>\n        <center>{ this.state.details === '' && this.state.selected === true? <Spinner animation=\"border\" size=\"sm\" /> : ''}</center>\n        { this.state.details !== '' && this.state.selected? <Details details = {this.state.details} cssVal = {this.state.shadowCss}></Details> : null }\n        <br></br>\n      </div>\n    )\n  }\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}